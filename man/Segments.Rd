% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Segment-generics.R, R/Segment-methods.R
\docType{methods}
\name{Segments}
\alias{Segments}
\alias{Segments<-}
\alias{Segments,gaSegmentList-method}
\alias{Segments,gaQuery-method}
\alias{Segments,ANY-method}
\alias{Segments<-,gaQuery-method}
\title{Segments}
\usage{
Segments(object, ...)

Segments(object) <- value

\S4method{Segments}{gaSegmentList}(object)

\S4method{Segments}{gaQuery}(object)

\S4method{Segments}{ANY}(object)

\S4method{Segments}{gaQuery}(object) <- value
}
\arguments{
\item{object}{A query object to get the segment list from or to set the
segment list of.}

\item{...}{Alternatively, provide one or more named arguments (segments or
objects that can be coerced into segments) including dynamic segments,
built-in and/or custom segments by their ID.}

\item{value}{A named list of segments or a single segment.}
}
\value{
A \code{gaSegmentList}
}
\description{
Get the list of segments from the object or coerce the supplied objects into
a a named list of segments.

Set the segments of the query object.
}
\section{Methods (by class)}{
\itemize{
\item \code{gaSegmentList}: Returns itself

\item \code{gaQuery}: Return the definition of the segment applied to the view.

\item \code{ANY}: Coerce an object into a segmentList of length 1.

\item \code{gaQuery}: Set the segments to be used within a query.
}}

\examples{
my_segments <- Segments(list(
  bounces = PerSession(Expr(~bounces != 0)),
  conversions = PerUser(Expr(~goalCompletionsAll > 0) | Expr(~transactions > 0)),
  mobile_or_tablet = Expr(~deviceCategory \%in\% c("mobile", "tablet")),
  multi_session_users = Include(PerUser(Expr(~sessions > 1)), scope = "users"),
  new_desktop_users = Expr(~deviceCategory == "desktop") & Expr(~userType == "new")
))

my_query <- GaQuery(view = "987654321")
my_segments_list <- list(
  bounces = PerSession(Expr(~bounces != 0)),
  conversions = PerUser(Expr(~goalCompletionsAll > 0) | Expr(~transactions > 0)),
  mobile_or_tablet = Expr(~deviceCategory \%in\% c("mobile", "tablet")),
  multi_session_users = Include(PerUser(Expr(~sessions > 1)), scope = "users"),
  new_desktop_users = Expr(~deviceCategory == "desktop") & Expr(~userType == "new")
)
Segments(my_query) <- my_segments_list

}
\seealso{
Other dynamic segment functions: \code{\link{DynSegment}},
  \code{\link{Exclude}}, \code{\link{Include}},
  \code{\link{IsNegated}}, \code{\link{PerHit}},
  \code{\link{PerProduct}}, \code{\link{PerSession}},
  \code{\link{PerUser}}, \code{\link{ScopeLevel}},
  \code{\link{SegmentConditionFilter}},
  \code{\link{Segment}}

Other dynamic segment functions: \code{\link{DynSegment}},
  \code{\link{Exclude}}, \code{\link{Include}},
  \code{\link{IsNegated}}, \code{\link{PerHit}},
  \code{\link{PerProduct}}, \code{\link{PerSession}},
  \code{\link{PerUser}}, \code{\link{ScopeLevel}},
  \code{\link{SegmentConditionFilter}},
  \code{\link{Segment}}
}
\concept{dynamic segment functions}
